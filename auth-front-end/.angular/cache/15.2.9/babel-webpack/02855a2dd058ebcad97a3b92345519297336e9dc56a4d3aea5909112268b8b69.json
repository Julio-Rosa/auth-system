{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-cookie-service\";\nexport class LoginComponent {\n  constructor(authService, router, cookieService) {\n    this.authService = authService;\n    this.router = router;\n    this.cookieService = cookieService;\n    this.btnText = \"Login\";\n    this.badCredential = false;\n    this.genericError = false;\n    this.inputType = false;\n    this.type = \"Show\";\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  showPassword() {\n    this.inputType = !this.inputType;\n    if (this.inputType) {\n      this.type = \"Hide\";\n    } else {\n      this.type = \"Show\";\n    }\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  submit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.get('username')?.value, this.loginForm.get('password')?.value).subscribe(res => {\n      this.token = res;\n      this.cookieService.deleteAll();\n      this.cookieService.set('token', `Bearer ${this.token.token}`);\n    }, err => {\n      this.loginForm.reset();\n      if (err.error.status === 500) {\n        this.badCredential = true;\n        setTimeout(() => {\n          this.badCredential = false;\n        }, 4000);\n      } else {\n        this.genericError = true;\n        setTimeout(() => {\n          this.genericError = false;\n        }, 4000);\n      }\n    }, () => {\n      this.router.navigate(['user/me']);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CookieService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  inputs: {\n    btnText: \"btnText\",\n    type: \"type\"\n  },\n  decls: 1,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAYnE,OAAM,MAAOC,cAAc;EASzBC,YAAoBC,WAAwB,EAAUC,MAAc,EAAUC,aAA4B;IAAtF,gBAAW,GAAXF,WAAW;IAAuB,WAAM,GAANC,MAAM;IAAkB,kBAAa,GAAbC,aAAa;IARlF,YAAO,GAAG,OAAO;IAE1B,kBAAa,GAAG,KAAK;IACrB,iBAAY,GAAG,KAAK;IAEpB,cAAS,GAAG,KAAK;IACR,SAAI,GAAG,MAAM;EAEwF;EAE9GC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAIT,SAAS,CAAC;MAC7BU,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,CAAC;KACpD,CAAC;EAKJ;EAEAE,YAAY;IACV,IAAI,CAACC,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;IAChC,IAAG,IAAI,CAACA,SAAS,EAAC;MACd,IAAI,CAACC,IAAI,GAAG,MAAM;KACrB,MAAI;MACH,IAAI,CAACA,IAAI,GAAG,MAAM;;EAEtB;EAEA,IAAIL,QAAQ;IACV,OAAO,IAAI,CAACD,SAAS,CAACO,GAAG,CAAC,UAAU,CAAE;EACxC;EACA,IAAIJ,QAAQ;IACV,OAAO,IAAI,CAACH,SAAS,CAACO,GAAG,CAAC,UAAU,CAAE;EACxC;EACAC,MAAM;IACJ,IAAI,IAAI,CAACR,SAAS,CAACS,OAAO,EAAE;MAC1B;;IAEF,IAAI,CAACb,WAAW,CAACc,KAAK,CAAC,IAAI,CAACV,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEI,KAAK,EAAE,IAAI,CAACX,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEI,KAAK,CAAC,CACjGC,SAAS,CAAEC,GAAG,IAAI;MACjB,IAAI,CAACC,KAAK,GAAGD,GAAG;MAChB,IAAI,CAACf,aAAa,CAACiB,SAAS,EAAE;MAC9B,IAAI,CAACjB,aAAa,CAACkB,GAAG,CAAC,OAAO,EAAC,UAAU,IAAI,CAACF,KAAK,CAACA,KAAK,EAAE,CAAC;IAC9D,CAAC,EAAGG,GAAG,IAAI;MACT,IAAI,CAACjB,SAAS,CAACkB,KAAK,EAAE;MACtB,IAAID,GAAG,CAACE,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QAE5B,IAAI,CAACC,aAAa,GAAG,IAAI;QAEzBC,UAAU,CAAC,MAAK;UACd,IAAI,CAACD,aAAa,GAAG,KAAK;QAE5B,CAAC,EAAC,IAAI,CAAC;OACR,MAAI;QACH,IAAI,CAACE,YAAY,GAAG,IAAI;QACxBD,UAAU,CAAC,MAAK;UACd,IAAI,CAACC,YAAY,GAAG,KAAK;QAE3B,CAAC,EAAC,IAAI,CAAC;;IAIX,CAAC,EAAE,MAAK;MACN,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC,CAAC;EAGN;;AAtEW9B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;IAAAC;IAAArB;EAAA;EAAAsB;EAAAC;EAAAC;IAAA;MCb3BC,sBAEM","names":["FormGroup","FormControl","Validators","LoginComponent","constructor","authService","router","cookieService","ngOnInit","loginForm","username","required","password","showPassword","inputType","type","get","submit","invalid","login","value","subscribe","res","token","deleteAll","set","err","reset","error","status","badCredential","setTimeout","genericError","navigate","selectors","inputs","btnText","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/sam/Desktop/auth-front-end/src/app/components/login/login.component.ts","/home/sam/Desktop/auth-front-end/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport { TokenModel } from 'src/app/model/token.model';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @Input() btnText = \"Login\";\n  loginForm!: FormGroup;\n  badCredential = false;\n  genericError = false;\n  token!: TokenModel;\n  inputType = false;\n  @Input() type = \"Show\";\n\n  constructor(private authService: AuthService, private router: Router, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n\n\n   \n   \n  }\n \n  showPassword(){\n    this.inputType = !this.inputType\n    if(this.inputType){\n        this.type = \"Hide\"\n    }else{\n      this.type = \"Show\"\n    }\n  }\n\n  get username() {\n    return this.loginForm.get('username')!;\n  }\n  get password() {\n    return this.loginForm.get('password')!;\n  }\n  submit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.authService.login(this.loginForm.get('username')?.value, this.loginForm.get('password')?.value)\n      .subscribe((res) => {\n        this.token = res;\n        this.cookieService.deleteAll();\n        this.cookieService.set('token',`Bearer ${this.token.token}`);\n      }, (err) => {\n        this.loginForm.reset()\n        if (err.error.status === 500) {\n         \n          this.badCredential = true;\n          \n          setTimeout(() => {\n            this.badCredential = false;\n            \n          },4000);\n        }else{\n          this.genericError = true;\n          setTimeout(() => {\n            this.genericError = false;\n            \n          },4000);\n          \n        }\n\n      }, () => {\n        this.router.navigate(['user/me']);\n      })\n\n\n  }\n\n}\n","<div>\n    \n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}