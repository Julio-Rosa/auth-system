{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MeComponent = class MeComponent {\n  constructor(userServive, authorizedService) {\n    this.userServive = userServive;\n    this.authorizedService = authorizedService;\n    this.hasError = false;\n  }\n  ngOnInit() {\n    this.authorizedService.authorized();\n    this.meSercice.me().subscribe(res => {\n      this.user = res;\n    }, err => {\n      this.hasError = true;\n    });\n  }\n};\nMeComponent = __decorate([Component({\n  selector: 'app-me',\n  templateUrl: './me.component.html',\n  styleUrls: ['./me.component.css']\n})], MeComponent);\nexport { MeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAGtBC,YAAoBC,WAAwB,EAAUC,iBAAoC;IAAtE,gBAAW,GAAXD,WAAW;IAAuB,sBAAiB,GAAjBC,iBAAiB;IADvE,aAAQ,GAAI,KAAK;EAC2E;EAC5FC,QAAQ;IACN,IAAI,CAACD,iBAAiB,CAACE,UAAU,EAAE;IACnC,IAAI,CAACC,SAAS,CAACC,EAAE,EAAE,CAChBC,SAAS,CAAEC,GAAG,IAAI;MACf,IAAI,CAACC,IAAI,GAAGD,GAAG;IACnB,CAAC,EAAGE,GAAG,IAAI;MACP,IAAI,CAACC,QAAQ,GAAG,IAAI;IACxB,CAAC,CAAC;EAEN;CAED;AAfYZ,WAAW,eALvBD,SAAS,CAAC;EACTc,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE,qBAAqB;EAClCC,SAAS,EAAE,CAAC,oBAAoB;CACjC,CAAC,GACWf,WAAW,CAevB;SAfYA,WAAW","names":["Component","MeComponent","constructor","userServive","authorizedService","ngOnInit","authorized","meSercice","me","subscribe","res","user","err","hasError","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/sam/Desktop/auth-front-end/src/app/components/me/me.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-me',\n  templateUrl: './me.component.html',\n  styleUrls: ['./me.component.css']\n})\nexport class MeComponent {\n  user: MeResponse\n  hasError =  false;\n  constructor(private userServive: UserService, private authorizedService: AuthorizedService){}\n  ngOnInit(): void {\n    this.authorizedService.authorized();\n    this.meSercice.me()\n      .subscribe((res) => {\n          this.user = res;\n      }, (err) => {\n          this.hasError = true;\n      })  \n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}