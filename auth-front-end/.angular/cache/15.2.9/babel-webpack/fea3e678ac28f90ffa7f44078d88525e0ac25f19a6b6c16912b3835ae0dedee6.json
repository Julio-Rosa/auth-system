{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ResetPasswordComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"Password successfully updated\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"Incorrect password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \"The new password cannot be the same as the old password.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Old passsword is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_13_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.oldPassword.errors[\"required\"]);\n  }\n}\nfunction ResetPasswordComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"New password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Must be at least 8 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Must contain at least 1 digit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Must contain at least 1 uppercase character\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Must contain at least 1 lowercase character\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Must contain at least 1 special character\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_23_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_23_span_2_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(3, ResetPasswordComponent_div_23_span_3_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(4, ResetPasswordComponent_div_23_span_4_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(5, ResetPasswordComponent_div_23_span_5_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.minLengthValid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.requiresDigitValid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.requiresUppercaseValid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.requiresLowercaseValid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.requiresSpecialCharsValid);\n  }\n}\nfunction ResetPasswordComponent_div_32_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Confirm password\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_32_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Password must be at least 8 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_32_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_32_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_32_span_2_Template, 2, 0, \"span\", 12);\n    i0.ɵɵtemplate(3, ResetPasswordComponent_div_32_span_3_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.errors[\"minLength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.errors[\"mismatch\"]);\n  }\n}\nexport class ResetPasswordComponent {}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || ResetPasswordComponent)();\n};\nResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetPasswordComponent,\n  selectors: [[\"app-reset-password\"]],\n  decls: 34,\n  vars: 11,\n  consts: [[1, \"form-bg\"], [\"class\", \"success-popup\", 4, \"ngIf\"], [\"class\", \"error-popup\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-container\"], [\"for\", \"oldPassword\", 1, \"label\"], [1, \"input-div\"], [\"formControlName\", \"oldPassword\", 1, \"field-input\", 3, \"type\"], [1, \"show\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"label\"], [\"formControlName\", \"password\", 1, \"field-input\", 3, \"type\"], [\"class\", \"danger\", 4, \"ngIf\"], [\"for\", \"confirmPassword\", 1, \"label\"], [\"formControlName\", \"confirmPassword\", 1, \"field-input\", 3, \"type\"], [\"type\", \"submit\", \"value\", \"Reset\", 1, \"submit-btn\"], [1, \"success-popup\"], [1, \"error-popup\"], [1, \"error\"], [1, \"danger\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ResetPasswordComponent_div_1_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(2, ResetPasswordComponent_div_2_Template, 2, 0, \"div\", 2);\n      i0.ɵɵtemplate(3, ResetPasswordComponent_div_3_Template, 2, 0, \"div\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Old password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_10_listener() {\n        return ctx.showPassword();\n      });\n      i0.ɵɵelementStart(11, \"a\");\n      i0.ɵɵtext(12, \"Show\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, ResetPasswordComponent_div_13_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementStart(19, \"span\", 8);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_19_listener() {\n        return ctx.showPassword();\n      });\n      i0.ɵɵelementStart(20, \"a\");\n      i0.ɵɵtext(21, \"Show\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(22, ResetPasswordComponent_span_22_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(23, ResetPasswordComponent_div_23_Template, 6, 5, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 4)(25, \"label\", 13);\n      i0.ɵɵtext(26, \"Confirm password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 6);\n      i0.ɵɵelement(28, \"input\", 14);\n      i0.ɵɵelementStart(29, \"span\", 8);\n      i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_span_click_29_listener() {\n        return ctx.showPassword();\n      });\n      i0.ɵɵelementStart(30, \"a\");\n      i0.ɵɵtext(31, \"Show\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(32, ResetPasswordComponent_div_32_Template, 4, 3, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 15);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.success);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.incorrectPassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.samePassword);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.inputType ? \"text\" : \"password\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.submitted || ctx.f.oldPassword.dirty) && ctx.f.oldPassword.errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.inputType ? \"text\" : \"password\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.f.password.dirty || ctx.submitted) && !ctx.requiredValid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.requiredValid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.inputType ? \"text\" : \"password\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", (ctx.submitted || ctx.f.confirmPassword.dirty) && ctx.f.confirmPassword.errors);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ResetPasswordComponent","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/sam/Desktop/auth-front-end/src/app/components/reset-password/reset-password.component.html","/home/sam/Desktop/auth-front-end/src/app/components/reset-password/reset-password.component.ts"],"sourcesContent":["<div class=\"form-bg\">\n    <div class=\"success-popup\" *ngIf=\"success\">Password successfully updated</div>\n    <div class=\"error-popup\" *ngIf=\"incorrectPassword\">Incorrect password!</div>\n    <div class=\"error-popup\" *ngIf=\"samePassword\">The new password cannot be the same as the old password.</div>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"resetForm\">\n        <div class=\"form-container\">\n            <label class=\"label\" for=\"oldPassword\">Old password</label>\n            <div class=\"input-div\">\n                <input  class=\"field-input\"[type]=\"inputType ? 'text': 'password'\" formControlName=\"oldPassword\">\n                <span class=\"show\" (click)=\"showPassword()\"><a>Show</a></span>\n            </div>\n            <div class=\"error\" *ngIf=\"(submitted || f.oldPassword.dirty) && f.oldPassword.errors\">\n                <span class=\"danger\" *ngIf=\"f.oldPassword.errors['required']\"> Old passsword is required</span>\n                \n            </div>\n            \n        </div>\n        \n        <div  class=\"form-container\">\n            <label class=\"label\" for=\"password\">Password</label>\n            <div class=\"input-div\">\n                <input class=\"field-input\" [type]=\"inputType ? 'text': 'password'\" formControlName=\"password\">\n                <span class=\"show\" (click)=\"showPassword()\"><a>Show</a></span>\n            </div>\n            <span class=\"danger\" *ngIf=\"(f.password.dirty || submitted) && !requiredValid\">New password is required</span>\n            <div class=\"error\" *ngIf=\"requiredValid\">\n                <span class=\"danger\" *ngIf=\"!minLengthValid\"> Must be at least 8 characters long</span>\n                <span class=\"danger\" *ngIf=\"!requiresDigitValid\">Must contain at least 1 digit</span>\n                <span class=\"danger\" *ngIf=\"!requiresUppercaseValid\">Must contain at least 1 uppercase character</span>\n                <span class=\"danger\" *ngIf=\"!requiresLowercaseValid\">Must contain at least 1 lowercase character</span>\n                <span class=\"danger\" *ngIf=\"!requiresSpecialCharsValid\"> Must contain at least 1 special character</span>\n                \n            </div>\n            \n        </div>\n        <div  class=\"form-container\">\n            <label class=\"label\" for=\"confirmPassword\">Confirm password</label>\n           <div class=\"input-div\">\n            <input class=\"field-input\" [type]=\"inputType ? 'text': 'password'\" formControlName=\"confirmPassword\">\n            <span class=\"show\" (click)=\"showPassword()\"><a>Show</a></span>\n        </div>\n            <div class=\"error\" *ngIf=\"(submitted || f.confirmPassword.dirty) && f.confirmPassword.errors\">\n                <span class=\"danger\" *ngIf=\"f.confirmPassword.errors['required']\">Confirm password</span>\n                <span class=\"danger\" *ngIf=\"f.confirmPassword.errors['minLength']\">Password must be at least 8 characters long</span>\n                <span class=\"danger\" *ngIf=\"f.confirmPassword.errors['mismatch']\">Passwords do not match</span>\n            </div>\n        </div>\n       \n        <input class=\"submit-btn\"  type=\"submit\" value=\"Reset\">\n    </form>\n   \n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent {\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}