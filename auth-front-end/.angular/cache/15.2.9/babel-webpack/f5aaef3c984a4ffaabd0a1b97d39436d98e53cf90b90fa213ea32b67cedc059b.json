{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = 'auth/authenticate';\n    this.domain = environment.api;\n  }\n  login(username, password) {\n    return this.http.post(`${this.domain}${this.endpoint}`, {\n      username,\n      password\n    });\n  }\n  register(request) {\n    return this.http.post(``);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,aAAQ,GAAI,mBAAmB;IAIrC,IAAI,CAACC,MAAM,GAAGJ,WAAW,CAACK,GAAG;EAC/B;EAEAC,KAAK,CAACC,QAAgB,EAACC,QAAe;IACpC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,MAAM,GAAG,IAAI,CAACM,QAAQ,EAAE,EAAC;MAACH,QAAQ;MAACC;IAAQ,CAAC,CAAC;EAC7E;EACAG,QAAQ,CAACC,OAAsB;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACM,IAAI,CAAM,EAAE,CAAC;EAClC;;AAbaR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["environment","AuthService","constructor","http","domain","api","login","username","password","post","endpoint","register","request","factory","providedIn"],"sourceRoot":"","sources":["/home/sam/Desktop/auth-front-end/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {HttpClient} from  '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { RegisterModel } from '../model/register.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private endpoint =  'auth/authenticate';\n  private domain: string | undefined;\n\n  constructor(private http: HttpClient) { \n    this.domain = environment.api;\n  }\n  \n  login(username: string,password:string): Observable<any>{\n    return this.http.post(`${this.domain}${this.endpoint}`,{username,password});\n  }\n  register(request: RegisterModel): Observable<any>{\n    return this.http.post<any>(``);\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}