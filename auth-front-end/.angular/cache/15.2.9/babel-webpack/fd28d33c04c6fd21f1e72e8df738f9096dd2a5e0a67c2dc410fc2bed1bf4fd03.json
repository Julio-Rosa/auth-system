{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class UserService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.meEndpoint = 'user/me';\n    this.allEndpoint = 'admin/user';\n    this.removeEndpoint = 'admin/user';\n    this.domain = environment.api;\n  }\n  me() {\n    return this.http.get(`${this.domain}${this.meEndpoint}`, {\n      headers: new HttpHeaders().set('Authorization', this.cookieService.get('token'))\n    });\n  }\n  all() {\n    return this.http.get(`${this.domain}${this.allEndpoint}`, {\n      headers: new HttpHeaders().set('Authorization', this.cookieService.get('token'))\n    });\n  }\n  remove(username) {\n    return this.http.delete(`${this.domain}${this.removeEndpoint}`, {\n      headers: new HttpHeaders().set('Authorization', this.cookieService.get('token'))\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAI9D,SAASC,WAAW,QAAQ,8BAA8B;;;;AAK1D,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IALnD,eAAU,GAAG,SAAS;IACtB,gBAAW,GAAG,YAAY;IAC1B,mBAAc,GAAG,YAAY;IAInC,IAAI,CAACC,MAAM,GAAGL,WAAW,CAACM,GAAG;EAC9B;EAGDC,EAAE;IACA,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI,CAACI,UAAU,EAAE,EAAE;MAACC,OAAO,EAAE,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAC,IAAI,CAACP,aAAa,CAACI,GAAG,CAAC,OAAO,CAAC;IAAE,CAAC,CAAC;EAC9I;EACAI,GAAG;IACD,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACH,MAAM,GAAG,IAAI,CAACQ,WAAW,EAAE,EAAC;MAACH,OAAO,EAAE,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,IAAI,CAACP,aAAa,CAACI,GAAG,CAAC,OAAO,CAAC;IAAC,CAAC,CAAC;EAC9I;EAEAM,MAAM,CAACC,QAAY;IACjB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,GAAG,IAAI,CAACY,cAAc,EAAE,EAAC;MAACP,OAAO,EAAE,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,IAAI,CAACP,aAAa,CAACI,GAAG,CAAC,OAAO,CAAC;IAAC,CAAC,CAAC;EACrJ;;AArBYP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["HttpHeaders","environment","UserService","constructor","http","cookieService","domain","api","me","get","meEndpoint","headers","set","all","allEndpoint","remove","username","delete","removeEndpoint","factory","providedIn"],"sourceRoot":"","sources":["/home/sam/Desktop/auth-front-end/src/app/services/user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private meEndpoint = 'user/me'\n  private allEndpoint = 'admin/user';\n  private removeEndpoint = 'admin/user';\n  private domain: string | undefined;\n\n  constructor(private http: HttpClient, private cookieService: CookieService) {\n    this.domain = environment.api;\n   }\n\n\n  me(): Observable<any>{\n    return this.http.get(`${this.domain}${this.meEndpoint}`, {headers: new HttpHeaders().set('Authorization',this.cookieService.get('token') )});\n  }\n  all(): Observable<any>{\n    return this.http.get(`${this.domain}${this.allEndpoint}`,{headers: new HttpHeaders().set('Authorization', this.cookieService.get('token'))});\n  }\n  \n  remove(username:any){\n    return this.http.delete(`${this.domain}${this.removeEndpoint}`,{headers: new HttpHeaders().set('Authorization', this.cookieService.get('token'))});\n }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}